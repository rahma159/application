#include "clientdashboardwidget.h"
#include "ui_clientdashboardwidget.h" // Generated by uic
#include "clientpaymentwidget.h" // To potentially open payment page

#include <QStandardItemModel> // Or your model
#include <QDebug>
#include <QMessageBox> // If adding actions

ClientDashboardWidget::ClientDashboardWidget(int clientId, QWidget *parent) :
    QDialog(parent), // Or QWidget(parent)
    ui(new Ui::ClientDashboardWidget),
    currentClientId(clientId),
    clientInvoiceModel(new QStandardItemModel(this)) // Example model
{
    ui->setupUi(this);
    // Rename main layout if needed (objectName was ClientDashboardWidget_2)
    // ui->ClientDashboardWidget_2->setObjectName("mainLayout");

    setupInvoiceTable();
    setupConnections();
    loadDashboardData();

    // If using the template background, ensure table readability
    // ui->ClientInvoiceTable->setStyleSheet("background-color: rgba(255, 255, 255, 200);"); // Semi-transparent white bg
    // ui->ClientInvoiceTable->setAlternatingRowColors(true);
}

ClientDashboardWidget::~ClientDashboardWidget()
{
    delete ui;
}

void ClientDashboardWidget::setupInvoiceTable()
{
    ui->clientInvoiceTable->setModel(clientInvoiceModel);
    // Define columns (Invoice #, Issue Date, Due Date, Amount, Status)
    clientInvoiceModel->setHorizontalHeaderLabels({"Invoice #", "Issue Date", "Due Date", "Amount", "Status"});
    // Configure appearance
    ui->clientInvoiceTable->setSelectionBehavior(QAbstractItemView::SelectRows);
    ui->clientInvoiceTable->setSelectionMode(QAbstractItemView::SingleSelection);
    ui->clientInvoiceTable->setEditTriggers(QAbstractItemView::NoEditTriggers); // Read-only for client
    ui->clientInvoiceTable->horizontalHeader()->setStretchLastSection(true);
    ui->clientInvoiceTable->resizeColumnsToContents();
}

void ClientDashboardWidget::setupConnections()
{
    // Connect signals if action buttons or double-click actions are added
    // connect(ui->ClientInvoiceTable, &QTableView::doubleClicked, this, &ClientDashboardWidget::on_clientInvoiceTable_doubleClicked);
    // connect(ui->payNowButton, &QPushButton::clicked, this, &ClientDashboardWidget::on_payNowButton_clicked);
}


void ClientDashboardWidget::loadDashboardData()
{
    qDebug() << "Loading dashboard data for client ID:" << currentClientId;
    clientInvoiceModel->clear(); // Clear previous data
    // Re-apply headers after clear
    clientInvoiceModel->setHorizontalHeaderLabels({"Invoice #", "Issue Date", "Due Date", "Amount", "Status"});

    // TODO: Fetch client's name and contact info from DB using currentClientId
    QString clientName = "Example Client"; // Placeholder
    QString contactInfo = "Contact: support@example.com"; // Placeholder

    ui->welcomeHeaderLabel->setText(QString("Your Invoices, %1").arg(clientName));
    ui->footerLabel->setText(contactInfo);

    // TODO: Fetch list of invoices for this client from DB
    // TODO: Loop through fetched invoices and add rows to clientInvoiceModel
    // Example row:
    // QList<QStandardItem *> rowItems;
    // rowItems << new QStandardItem("INV-002") << new QStandardItem("2023-10-25") << ... ;
    // clientInvoiceModel->appendRow(rowItems);
    // Add invoice ID as UserRole data to easily retrieve it later if needed
    // item->setData(invoiceId, Qt::UserRole);


    ui->clientInvoiceTable->resizeColumnsToContents();
    // updateActionButtonsState(); // If buttons exist
}

// --- Placeholder Slots for potential actions ---

/*
void ClientDashboardWidget::on_clientInvoiceTable_doubleClicked(const QModelIndex &index)
{
    qDebug() << "Invoice double-clicked at row:" << index.row();
    // Potentially open a detailed view or payment page
    // int invoiceId = clientInvoiceModel->item(index.row(), 0)->data(Qt::UserRole).toInt(); // Get ID
    // Open payment page for this invoice:
    // ClientPaymentWidget paymentDialog(this);
    // paymentDialog.loadInvoiceDetails(invoiceId);
    // paymentDialog.exec();
    // loadDashboardData(); // Refresh after payment attempt
}
*/

/*
void ClientDashboardWidget::on_payNowButton_clicked()
{
    QModelIndexList selection = ui->ClientInvoiceTable->selectionModel()->selectedRows();
    if (selection.isEmpty()) {
        QMessageBox::warning(this, "Selection Error", "Please select an invoice to pay.");
        return;
    }
    int invoiceId = clientInvoiceModel->item(selection.first().row(), 0)->data(Qt::UserRole).toInt(); // Get ID
    qDebug() << "Pay Now clicked for invoice ID:" << invoiceId;

    ClientPaymentWidget paymentDialog(this);
    paymentDialog.loadInvoiceDetails(invoiceId);
    paymentDialog.exec();
    loadDashboardData(); // Refresh status after payment attempt
}
*/
